{"version":3,"sources":["componnets/footer/index.jsx","componnets/header/index.jsx","assets/loading/index.jsx","redux/actions.jsx","componnets/main/gamePlace.jsx","componnets/main/getUsers.jsx","componnets/main/startGame.jsx","componnets/main/endGame.jsx","componnets/main/index.jsx","App.jsx","serviceWorker.js","redux/reduser.jsx","index.jsx"],"names":["Footer","className","Header","Loading","type","color","height","width","changePeriod","data","dispatch","payload","period","fixEndTime","endTime","str","currentStr","GamePlace","useState","setData","text","setText","wrongStr","setWrongStr","trueStr","setTrueStr","setCurrentStr","correctStr","setCorrectStr","strLength","setStrLength","loading","setLoading","useSelector","state","timer","wrongStep","useDispatch","useEffect","cor","replace","length","correctTimer","useMemo","m","s","includes","slice","wrong","changeWrong","substr","a","fetch","request","json","response","err","console","log","timerTimeOut","setTimeout","changeTimer","clearTimeout","onChange","e","target","value","GetUsers","correctData","setCorrectData","result","Array","isArray","map","item","uri","Promise","all","then","r","catch","index","key","firstName","lastName","netWPM","accuracy","StartGame","name","setName","setLastName","changeCurrentPeriod","useCallback","changenames","document","querySelector","classList","toggle","fillInputs","remove","placeholder","onFocus","onClick","EndGame","mainStrLength","saveData","setSaveData","afterSave","setAfterSave","beforData","setBeforData","Math","round","handleSaveResult","obj","options","method","body","JSON","stringify","headers","arr","addEventListener","Main","App","Boolean","window","location","hostname","match","initialState","store","createStore","actions","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7b24b819.chunk.js","sourcesContent":["import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <h1>by Grigor Abrahamyan</h1>\n    </footer>\n  )\n};\n\nexport default Footer;","import React from 'react';\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <h1>Typing Speed (WPM) and Accuracy</h1>\n    </header>\n  )\n};\n\nexport default Header;","import React from 'react';\nimport Loader from 'react-loader-spinner'\n\nfunction Loading() {\n\n    return (\n        <div className = 'loading' >\n            <Loader\n                type=\"Oval\"\n                color=\"#4CCCC9\"\n                height={100}\n                width={100}\n            />\n        </div>\n    );\n}\n\nexport default Loading;","const timer = (data) => ({ type: 'CHNAGE_TIMER', payload: data });\nconst wrong = (data) => ({ type: 'CHANGE_WRONG', payload: data });\nconst period = (data) => ({ type: 'CHANGE_PERIOD', payload: data });\nconst names = (data) => ({ type: 'CHANGE_NAMES', payload: data });\nconst endTimeDate = (data) => ({ type: 'FIX_ENDTIME_MAINSTR', payload: data });\n\nexport const changeTimer = (data) => (dispatch) => {\n  dispatch(timer(data));\n}\n\nexport const changeWrong = (data) => (dispatch) => {\n  dispatch(wrong(data));\n}\n\nexport const changePeriod = (data) => (dispatch) => {\n  dispatch(period(data));\n}\n\nexport const changenames = (name, lastName) => (dispatch) => {\n  const obj = {\n    name,\n    lastName,\n  };\n  dispatch(names(obj));\n} \n\nexport const fixEndTime = (endTime, str, currentStr) => (dispatch) => {\n  const obj = {\n    endTime,\n    str,\n    currentStr\n  } \n  dispatch(endTimeDate(obj));\n}","import React, { useEffect, useState, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Loading from '../../assets/loading';\n\nimport { changeTimer, changeWrong, changePeriod, fixEndTime } from '../../redux/actions.jsx';\n\nconst GamePlace = () => {\n\n  const [data, setData] = useState([]);\n  const [text, setText] = useState('');\n  const [wrongStr, setWrongStr] = useState('');\n  const [trueStr, setTrueStr] = useState('');\n  const [currentStr, setCurrentStr] = useState('');\n  const [correctStr, setCorrectStr] = useState([]);\n  const [strLength, setStrLength] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const { timer, wrongStep } = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    let str = data?.[0];\n    //let result = str?.match(/([a-zA-Z]+)|([(]([a-zA-Z]+[+])+[a-zA-Z]+[)])+/gi);\n    const cor = str?.replace(/\\..{1}/g, '.');\n    setCorrectStr(cor);\n    setStrLength(cor?.length);\n  }, [data]);\n\n  const correctTimer = useMemo(() => {\n    let m = 0;\n    let s = 0;\n    if (!(timer % 60)) {\n      m = `0${timer / 60}`\n      s = `00`;\n    } else {\n      m = `0${(timer - (timer % 60)) / 60}`;\n      if (timer % 60 < 10) {\n        s = `0${timer % 60}`\n      } else {\n        s = `${timer % 60}`\n      }\n    }\n    return {\n      m,\n      s\n    }\n  }, [timer]);\n\n  useEffect(() => {\n    if (!text.length) {\n      setCurrentStr(correctStr);\n      setTrueStr('');\n      setWrongStr('');\n    } else {\n      if (correctStr.includes(text) && correctStr[0] === text[0]) {\n        if (text[text.length - 1] === correctStr[text.length - 1]) {\n          setCurrentStr(correctStr.slice(text.length));\n          setTrueStr(text);\n          setWrongStr('');\n        }\n      } else {\n        if (text.length < wrongStr.length + trueStr.length) {\n          setWrongStr(wrongStr.slice(0, wrongStr.length - 1));\n          setCurrentStr(correctStr.slice(text.length));\n        } else {\n          dispatch(changeWrong(wrongStep + 1));\n          setWrongStr(wrongStr + correctStr.substr(text.length - 1, 1));\n          setTrueStr(text.slice(0, text.length - wrongStr.length - 1));\n          setCurrentStr(correctStr.slice(text.length));\n        }\n      }\n    }\n  }, [correctStr, text]);\n\n  useEffect(() => {\n    try {\n      (async () => {\n        setLoading(true);\n        const request = await fetch('https://baconipsum.com/api/?type=all-meat&paras=2&start-with-lorem=1');\n        const response = await request.json();\n        setData(response);\n        setLoading(false);\n      })()\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n\n  useEffect(() => {\n    let timerTimeOut = setTimeout(() => dispatch(changeTimer(timer - 1)), 1000);\n    if (timer === 0) {\n      return clearTimeout(timerTimeOut);\n    }\n  }, [timer]);\n\n  useEffect(() => {\n    if (text.length === strLength && !wrongStr.length) {\n      dispatch(changePeriod('end'));\n      dispatch(fixEndTime(timer, strLength, text.length));\n    }\n    if (timer === 0) {\n      dispatch(changePeriod('end'));\n      dispatch(fixEndTime(0, strLength, text.length));\n    }\n  }, [text, wrongStr, timer]);\n\n  return (\n    <section className=\"container\">\n      <div className='container__wrapper' >\n        <div className='wrapper__timer__wrong' >\n          <div className='same wrong' >\n            <p>Wrong Step</p>\n            <p>{wrongStep}</p>\n          </div>\n          <div className='same timer' >\n            <p>Timer</p>\n            <p>{`${correctTimer.m}m : ${correctTimer.s}s`}</p>\n          </div>\n        </div>\n        <div className='text text__fetch' >\n          {\n            loading ? <Loading /> :\n              (\n                <>\n                  <span className='true__str' >{trueStr}</span>\n                  <span className='wrong__str' >{wrongStr}</span>\n                  <span className='current__str' >{currentStr}</span>\n                </>\n              )\n          }\n        </div>\n        <div className='text text__correct' >\n          <div>\n            <textarea\n              className='text__textarea'\n              onChange={(e) => setText(e.target.value)}\n              value={text}\n            ></textarea>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n};\n\nexport default GamePlace;","import React, { useEffect, useState } from 'react';\nimport Loading from '../../assets/loading';\n\nconst GetUsers = () => {\n\n  const [data, setData] = useState([]);\n  const [correctData, setCorrectData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    try {\n      (\n        async () => {\n          setLoading(true);\n          let response = await fetch('https://jsonstorage.net/api/items/916710d9-3147-4623-a0dd-02108c2fe3f0');\n          let result = await response.json();\n          setData(result);\n          setLoading(false);\n        }\n      )()\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!Array.isArray(data)) {\n      try {\n        (\n          async () => {\n            setLoading(true);\n            let response = await fetch(data.uri);\n            let result = await response.json();\n            setCorrectData([result]);\n            setLoading(false);\n          }\n        )()\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      const correctData = data.map(item => fetch(item.uri));\n      //setLoading(true);\n      Promise.all(correctData)\n        .then(response => response)\n        .then(response => Promise.all(response.map(r => r.json())))\n        .then(response => setCorrectData(response))\n        //.then(response => setLoading(false))\n        .catch(err => console.log(err));\n    }\n  }, [data]);\n\n  if (loading) {\n    return <Loading />\n  }\n\n  return (\n    <div className='startGame__wrapperUsers' >\n      {\n        correctData.map((item, index) => {\n          return (\n            <div key={index} className='startGame__user' >\n              <p>{`${item.firstName} ${item.lastName}`}</p>\n              <p>{`WPM: ${item.netWPM}`}</p>\n              <p>{`Accurancy: ${item.accuracy}%`}</p>\n            </div>\n          )\n        })\n      }\n    </div>\n  )\n};\n\nexport default GetUsers;","import React, { useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changePeriod, changenames } from '../../redux/actions';\nimport GetUsers from './getUsers';\n\nconst StartGame = () => {\n\n  const [name, setName] = useState('');\n  const [lastName, setLastName] = useState('');\n\n  const dispatch = useDispatch();\n\n  const changeCurrentPeriod = useCallback(() => {\n    if (name.length && lastName.length) {\n      dispatch(changePeriod('middle'));\n      dispatch(changenames(name, lastName));\n    } else {\n      const elem = document.querySelector('.lessInput');\n      elem.classList.toggle('showMassage');\n    }\n  }, [name, lastName]);\n\n  const fillInputs = useCallback(() => {\n    const elem = document.querySelector('.lessInput');\n    elem.classList.remove('showMassage');\n  }, []);\n\n  return (\n    <section className=\"container startGame\">\n      <div className='startGame__titleWrapper' >\n        <h1 className='startGame__title' >It’s like a game where you can understand how fast you can type and how accurately</h1>\n      </div>\n      <GetUsers />\n      <div className='lessInput' >\n        <p>Please fill all fields</p>\n      </div>\n      <div className='startGame__nameSpace' >\n        <div className='startGame__wrapperInput' >\n          <input\n            type=\"text\"\n            value={name}\n            placeholder='First Name'\n            onFocus={fillInputs}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </div>\n        <div className='startGame__wrapperInput' >\n          <input\n            type=\"text\"\n            value={lastName}\n            placeholder='Last Name'\n            onFocus={fillInputs}\n            onChange={(e) => setLastName(e.target.value)}\n          />\n        </div>\n      </div>\n      <div className='startGame__wrapperButton' >\n        <div className='startGame__button' >\n          <button\n            onClick={changeCurrentPeriod}\n          >\n            START THE GAME\n          </button>\n        </div>\n      </div>\n    </section>\n  )\n};\n\nexport default StartGame;","import React, { useMemo, useCallback, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changePeriod } from '../../redux/actions';\n\nconst EndGame = () => {\n\n  const { endTime, firstName, lastName, wrongStep, mainStrLength, currentStr } = useSelector(state => state);\n\n  //const endTime = 0;\n  //const firstName = 'Arsen';\n  //const lastName = 'Safaryan';\n  //const wrongStep = 8;\n  //const mainStrLength = 300;\n  //const currentStr = 295;\n\n  const [saveData, setSaveData] = useState({});\n  const [afterSave, setAfterSave] = useState('');\n  const [beforData, setBeforData] = useState({});\n  const dispatch = useDispatch();\n\n  const netWPM = useMemo(() => {\n    return Math.round((mainStrLength / 5 / ((180 - endTime) / 60))) - wrongStep;\n  }, [mainStrLength, endTime, wrongStep]);\n\n  const accuracy = useMemo(() => {\n    if (mainStrLength - currentStr < 0) {\n      return 0;\n    }\n    return Math.round((currentStr - (mainStrLength - currentStr) - wrongStep) * 100 / mainStrLength);\n  }, [mainStrLength, currentStr, wrongStep]);\n\n  const handleSaveResult = useCallback((firstName, lastName, netWPM, accuracy) => {\n    const obj = {\n      firstName,\n      lastName,\n      netWPM,\n      accuracy\n    };\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(obj),\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      }\n    };\n\n    try {\n      (async () => {\n        let response = await fetch('https://jsonstorage.net/api/items', options);\n        let result = await response.json();\n        setSaveData(result);\n      })()\n    } catch (err) {\n      console.log(err, 'error massage');\n    }\n  }, [saveData]);\n\n  useEffect(() => {\n    try {\n      (\n        async () => {\n          let response = await fetch('https://jsonstorage.net/api/items/916710d9-3147-4623-a0dd-02108c2fe3f0');\n          let result = await response.json();\n          setBeforData(result);\n        }\n      )()\n    } catch (err) {\n      console.log(err);\n    }\n  }, [afterSave]);\n\n  useEffect(() => {\n    if (!saveData.uri) return\n    let arr = [];\n    if (!Array.isArray(beforData)) {\n      arr = [saveData];\n    } else {\n      arr = [saveData, ...beforData];\n    }\n    const options = {\n      method: 'PUT',\n      body: JSON.stringify(arr),\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      }\n    };\n    try {\n      (async () => {\n        let response = await fetch('https://jsonstorage.net/api/items/916710d9-3147-4623-a0dd-02108c2fe3f0', options);\n        let result = await response.json();\n        if (result.uri !== 'https://jsonstorage.net/api/items/916710d9-3147-4623-a0dd-02108c2fe3f0') {\n          setAfterSave('Something went wrong!');\n        } else {\n          setAfterSave('Your result has been saved!');\n        }\n      })()\n    } catch (err) {\n      console.log(err, 'error massage');\n    }\n  }, [saveData]);\n\n  useEffect(() => {\n    if (!afterSave.length) return\n    document.addEventListener('click', () => dispatch(changePeriod('start')));\n  }, [afterSave]);\n\n  return (\n    <section className=\"container endGame\">\n      <div className='endGame__body' >\n        <div className='endGame__wrapperTitle' >\n          <h1 className='endGame__title' >{`${firstName} ${lastName}`}</h1>\n        </div>\n        <div className='endGame__wrapperText' >\n          <p className='endGame__text' >{`Average speed in WPM: ${netWPM}`}</p>\n          <p className='endGame__text' >{`Completion percent: ${accuracy}%`}</p>\n        </div>\n        {\n          afterSave.length ?\n            <div className='endGame__afterSave' >\n              <p>{afterSave}</p>\n            </div> : null\n        }\n        <div className='endGame__saveWrapper' >\n          <div className='endGame__button' >\n            <button\n              onClick={() => handleSaveResult(firstName, lastName, netWPM, accuracy)}\n            >\n              SAVE RESULT\n            </button>\n          </div>\n          <div className='endGame__button' >\n            <button\n              onClick={() => dispatch(changePeriod('start'))}\n            >\n              NEW GAME\n            </button>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n};\n\nexport default EndGame;","import React, { useEffect, useState, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport GamePlace from './gamePlace';\nimport StartGame from './startGame';\nimport EndGame from './endGame';\n\nconst Main = () => {\n\n  const { period } = useSelector(state => state);\n\n  if (period === 'start') return <StartGame /> \n  if (period === 'middle') return <GamePlace />\n  if (period === 'end') return <EndGame />\n  \n};\n\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Footer from './componnets/footer';\nimport Header from './componnets/header';\nimport Main from './componnets/main';\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n  timer: 180,\n  wrongStep: 0,\n  period: 'start',\n  firstName: '',\n  lastName: '',\n  endTime: null,\n  mainStrLength: null,\n  currentStr: null,\n};\n\nexport const reducer = (state = initialState, actions) => {\n  switch (actions.type) {\n    case 'CHNAGE_TIMER':\n      return {\n        ...state,\n        timer: actions.payload\n      };\n    case 'CHANGE_WRONG':\n      return {\n        ...state,\n        wrongStep: actions.payload\n      };\n    case 'CHANGE_PERIOD':\n      return {\n        ...state,\n        period: actions.payload\n      };\n    case 'CHANGE_NAMES':\n      const { name, lastName } = actions.payload;\n      return {\n        ...state,\n        firstName: name,\n        lastName\n      };\n    case 'FIX_ENDTIME_MAINSTR':\n      const { endTime, str, currentStr } = actions.payload\n      return {\n        ...state,\n        endTime,\n        mainStrLength: str,\n        currentStr\n      };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { reducer } from './redux/reduser.jsx';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store} >\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}